import os
import random
import ydb

TG_TOKEN = os.getenv('TG_TOKEN')
URL = f'https://api.telegram.org/bot{TG_TOKEN}/'

driver_config = ydb.DriverConfig(
    endpoint=os.getenv('YDB_ENDPOINT'),
    database=os.getenv('YDB_DATABASE'),
    credentials=ydb.iam.MetadataUrlCredentials(),
)

driver = ydb.Driver(driver_config)
driver.wait(fail_fast=True, timeout=5)
pool = ydb.SessionPool(driver)

quotes = [
    "Вот что мне нравится в чтении: одна-единственная деталька в повествовании заставляет взяться за другую книгу, а крохотная деталька в ней — за третью... Бесконечная геометрическая прогрессия, рожденная погоней за удовольствием. — «Клуб любителей книг и пирогов из картофельных очистков».",
    "Сердце умирает медленно, сбрасывая надежды как листья, до тех пор пока не останется ни одной, ни единой надежды. Ничего не остается... — «Мемуары гейши».",
    "Жизнь как коробка шоколадных конфет: никогда не знаешь, какая начинка тебе попадется». — «Форрест Гамп».",
    "Мы ходим на работу, которую ненавидим, чтобы купить вещи, которые нам не нужны. — «Бойцовский клуб».",
    "Не все приходит к нам тогда, когда мы этого хотим. В жизни есть моменты, когда нужно сделать выбор или ты проигрываешь по всем статьям. — «Мисс Петтигрю».",
    "Признавать свои ошибки тяжело, особенно, когда долго ошибался. — «Вторая жизнь Уве».",
    "Высказывать свои мысли вслух может быть опасно. — «Мальчик в полосатой пижаме».",
    "Знаете, забавно получается: начинаешь ценить радости жизни, только когда оказываешься вдали от дома. — «Жареные зеленые помидоры».",
    "Да, он прав, тысячу раз прав этот дуб, пускай другие, молодые, вновь поддаются на этот обман, а мы знаем жизнь, — наша жизнь кончена! Надо доживать свою жизнь, не делая зла, не тревожась и ничего не желая. — «Война и мир».",
    "Всё живое: каждый листок, каждая птица — живы лишь потому, что в них заключено тайное слово жизни. Это единственное, что разнит нас с комком глины — слово. Слова — это жизнь. Заполни все эти пустые страницы. — «Воровка книг».",
    "Что бы делало твое добро, если бы не существовало зла, и как бы выглядела земля, если бы с нее исчезли тени? — «Мастер и Маргарита».",
    "Жизнь состоит из ветров. Они налетают и уносятся, налетают и уносятся, но жить не означает ждать, когда буря стихнет. — «Королек — птичка певчая».",
    "Страх делает тебя пленником. Надежда дает тебе свободу. — «Побег из Шоушенка».",
    "Одиночество — самое страшное, что может случиться с человеком. И неважно, кто этот человек, бедняк или богач, простак или хитрец, глупец или гений. Одиночество не стучится и не ждет, пока ему откроют, у него есть ключи ото всех дверей. — «Парфюмер».",
    "Я не хочу выживать. Я хочу жить — «12 лет рабства».",
    "У каждого свой ад — это не обязательно огонь и смола! Наш ад — это жизнь впустую. — «Куда приводят мечты».",
    "Честность – понятие растяжимое. Сказала честно, а сделала подло. — «Чучело».",
    "Нет ничего лучше, чем быть дома. — «Волшебник страны Оз».",
    "Чему быть — того не миновать. Ибо нет такого коня, на котором от самого себя ускакать можно. — «Табор уходит в небо».",
    "Как бы я хотела снова стать маленькой девочкой! Смеяться над любой болью... Что же я так изменилась? — «Грозовой перевал».",
    "Удивительно, как порой люди, которых мы едва помним, оказывают на нас самое сильное впечатление, — «Загадочная история Бенджамина Баттона».",
    "Часто преступление для одного становится позором для другого. — «Д'Артаньян и три мушкетера».",
    "Мы сами создаем для себя тернии и даже не задумываемся, чего нам это будет стоить. А потом только и остается терпеть и уверять себя, что мучаемся не напрасно. — «Поющие в терновнике».",
    "Снова и снова перелистываю эти жалкие воспоминания и все допытываюсь у самого себя, не оттуда ли, не из блеска ли того далекого лета пошла трещина через всю мою жизнь. — «Лолита».",
    "Нигде и никогда, ни в одном городе мира, ты уж мне поверь, это правда, звезды не светят так ярко и пленительно, как в городе детства, — «Карнавал».",
    "Мы не хозяева собственной жизни. Мы связаны с другими прошлым и настоящим. И каждый проступок, как и каждое доброе дело, рождают новое будущее, — «Облачный атлас».",
    "Ты называешь себя свободной, дикой. И ты так боишься, что кто-то посадит тебя в клетку. Детка, ты уже в клетке. Ты сама ее создала... Она всегда будет с тобой, потому что, куда бы ты ни отправилась, от самой себя тебе не убежать. — «Завтрак у Тиффани».",
    "Мечты разные... И пути их осуществления тоже. Получается, что, выбрав неверный путь, можно распрощаться с мечтой, даже не приблизившись к ней. — «Реквием по мечте».",
    "Ты так долго носишь маску, что забываешь, кто ты был под ней. — «V значит Вендетта».",
    "Память — странная штука. Иногда то, что мы хотели бы забыть, пытались оставить в прошлом, там не остается. Иногда прошлое возвращается за тобой. — «Оно».",
    "Боги завидуют нам, потому что мы смертны. Любой момент нашей жизни может стать последним. Ведь жизнь ярче и прекраснее, когда она конечна. Ты никогда не будешь красивее, чем сейчас. И мы больше не будем здесь никогда. — «Троя».",
    "Когда вы читаете, не пытайтесь угадывать, что думает автор. Думайте сами. — «Общество мертвых поэтов».",
    "Один из плюсов прошлого в том, что оно в прошлом. — «Дориан Грей».",
    "Глупостей не надо делать даже со скуки. — «А зори здесь тихие».",
    "Этот процесс не понять, остановив его. Надо двигаться в одном потоке с жизнью, слиться с ней, нестись по течению. — «Дюна».",
    "Хватит забивать голову предрассудками и условностями! Жизнь коротка! — «Шоколад».",
    "Не позволяй себе сдаться. Пусть твое тело закуют в цепи, но твой разум заковать не смогут. — «Корни»."
]


def handler(event, context):
    chat_ids = get_users_with_subscription()

    for chat_id in chat_ids:
        quote = random.choice(quotes)
        send_text_message('Твоя цитата сегодня'+ quote, chat_id)

    return {
        'statusCode': 200
    }


def get_users_with_subscription():
    query = f"""
    SELECT chat_id
      FROM users
     WHERE quotes_subscription = true
    """

    result =  pool.retry_operation_sync(lambda s: s.transaction().execute(
        query,
        commit_tx=True,
        settings=ydb.BaseRequestSettings().with_timeout(3).with_operation_timeout(2)
    ))

    ids = []

    for row in result[0]:
        id = row['chat_id']
        ids.append(id)

    return ids


def send_text_message(text, chat_id):
    url = URL + f'sendMessage?text={text}&chat_id={chat_id}'

    requests.post(url)
