from database import *
from keyboards import *
from recomendations import *

TG_TOKEN = os.getenv('TG_TOKEN')
URL = f'https://api.telegram.org/bot{TG_TOKEN}/'


def handler(event, context):
    message = json.loads(event['body'])
    print(message)

    if is_callback_query(message):
        handle_callback_query(message)
    elif is_text_message(message):
        handle_text_message(message)
    else:
        handle_invalid_message(message)

    return {
        'statusCode': 200
    }


def is_callback_query(message):
    return 'callback_query' in message.keys()


def handle_callback_query(message):
    chat_id = message['callback_query']['message']['chat']['id']
    parts = message['callback_query']['data'].split('_')
    action = parts[0]

    if is_preference_action(action):
        handle_preference_action(chat_id, action, parts)
    elif is_rate_action(action):
        handle_rate_action(chat_id, action, parts)
    elif is_subscription_message(action):
        handle_subscription_message(chat_id, parts)
    else:
        send_text_message('–û—à–∏–±–∫–∞: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ', chat_id)


def is_preference_action(action):
    return action == 'genre' or action == 'country' or action == 'period' or action == 'duration'


def handle_preference_action(chat_id, action, parts):
    chosen_id = parts[1]

    if chosen_id == '-1':
        send_text_message('–¢—ã –æ—Ç–º–µ–Ω–∏–ª –≤—ã–±–æ—Ä', chat_id)
        return

    if action == 'genre':
        set_favorite_genre(chat_id, int(chosen_id))
        send_text_message('–Ø –∑–∞–ø–æ–º–Ω–∏–ª —Ç–≤–æ–π –≤—ã–±–æ—Ä –∂–∞–Ω—Ä–∞', chat_id)
    elif action == 'country':
        set_favorite_country(chat_id, int(chosen_id))
        send_text_message('–Ø –∑–∞–ø–æ–º–Ω–∏–ª —Ç–≤–æ–π –≤—ã–±–æ—Ä —Å—Ç—Ä–∞–Ω—ã', chat_id)
    elif action == 'period':
        set_favorite_period(chat_id, int(chosen_id))
        send_text_message('–Ø –∑–∞–ø–æ–º–Ω–∏–ª —Ç–≤–æ–π –≤—ã–±–æ—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞', chat_id)
    elif action == 'duration':
        set_favorite_duration(chat_id, int(chosen_id))
        send_text_message('–Ø –∑–∞–ø–æ–º–Ω–∏–ª —Ç–≤–æ–π –≤—ã–±–æ—Ä –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ —Ñ–∏–ª—å–º–∞', chat_id)
    else:
        send_text_message('–û—à–∏–±–∫–∞: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ', chat_id)


def is_rate_action(action):
    return action == 'rate' or action == 'skip' or action == 'hide'


def handle_rate_action(chat_id, action, parts):
    if action == 'skip':
        send_text_message('–¢—ã —Ä–µ—à–∏–ª –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–æ—Ç —Ñ–∏–ª—å–º', chat_id)

    film_kp_id = int(parts[1])

    if action == 'hide':
        hide_film(chat_id, film_kp_id)
        send_text_message('–ë–æ–ª—å—à–µ –Ω–µ –±—É–¥—É –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å —Ç–µ–±–µ —ç—Ç–æ—Ç —Ñ–∏–ª—å–º', chat_id)
    elif action == 'rate':
        rating = int(parts[2])
        rate_film(chat_id, film_kp_id, rating)
        send_text_message('–Ø –∑–∞–ø–æ–º–Ω–∏–ª —Ç–≤–æ—é –æ—Ü–µ–Ω–∫—É, –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ—ë –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —Å–≤–æ–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π', chat_id)
    else:
        send_text_message('–û—à–∏–±–∫–∞: –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ', chat_id)


def is_subscription_message(action):
    return action == 'subscription'


def handle_subscription_message(chat_id, parts):
    answer = parts[1]

    if answer == 'no':
        send_text_message('–û–∫, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞—é', chat_id)
        return

    current_status = get_quote_subscription_status(chat_id)
    status_to_set = True if current_status is False else True

    set_quote_subscription_status(chat_id, status_to_set)

    send_text_message('–ì–æ—Ç–æ–≤–æ', chat_id)


def is_text_message(message):
    return 'message' in message and 'text' in message['message']


def handle_text_message(message):
    chat_id = message['message']['chat']['id']
    text = message['message']['text']

    add_user_if_needed(chat_id)

    if text == '/start':
        handle_start_command(chat_id)
    elif text == '/preferences':
        handle_preferences_command(chat_id)
    elif text == '/favorite_genre':
        handle_favorite_genre_command(chat_id)
    elif text == '/favorite_country':
        handle_favorite_country_command(chat_id)
    elif text == '/favorite_duration':
        handle_favorite_duration_command(chat_id)
    elif text == '/favorite_period':
        handle_favorite_period_command(chat_id)
    elif text == '/film_recommendation':
        handle_film_recommendation_command(chat_id)
    elif text == '/quote_subscription':
        handle_quote_subscription_command(chat_id)
    else:
        send_text_message('–û—à–∏–±–∫–∞: –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –∫–æ–º–∞–Ω–¥–∞\n–í–≤–µ–¥–∏ /start –¥–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è —Å –º–æ–∏–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏', chat_id)


def handle_start_command(chat_id):
    text = ('–ü—Ä–∏–≤–µ—Ç!\n'
            '–Ø "Film For You" –±–æ—Ç –∏ –≤–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n'
            '/preferences - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –≤ —Ñ–∏–ª—å–º–∞—Ö\n'
            '/favorite_genre - –≤—ã–±—Ä–∞—Ç—å –ª—é–±–∏–º—ã–π –∂–∞–Ω—Ä\n'
            '/favorite_country - –≤—ã–±—Ä–∞—Ç—å –ª—é–±–∏–º—É—é —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞\n'
            '/favorite_period - –≤—ã–±—Ä–∞—Ç—å –ª—é–±–∏–º—ã–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥\n'
            '/favorite_duration - –≤—ã–±—Ä–∞—Ç—å –ª—é–±–∏–º—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ñ–∏–ª—å–º–∞\n'
            '/film_recommendation - –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é —Ñ–∏–ª—å–º–∞\n'
            '/quote_subscription - –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ü–∏—Ç–∞—Ç –∏–∑ —Ñ–∏–ª—å–º–æ–≤ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å\n\n'
            '–°–æ–≤–µ—Ç—É—é –ø–µ—Ä–≤—ã–º –¥–µ–ª–æ–º –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π')

    send_text_message(text, chat_id)


def handle_preferences_command(chat_id):
    preferences = get_user_preferences(chat_id)
    genre = preferences['genre_name']
    country = preferences['country_name']
    period = preferences['period_name']
    duration = preferences['duration_name']

    text = ('–¢–≤–æ–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è:\n'
            f'–õ—é–±–∏–º—ã–π –∂–∞–Ω—Ä: {genre.decode("utf-8") if genre is not None else "–Ω–µ –≤—ã–±—Ä–∞–Ω"}\n'
            f'–õ—é–±–∏–º–∞—è —Å—Ç—Ä–∞–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞: {country.decode("utf-8") if country is not None else "–Ω–µ –≤—ã–±—Ä–∞–Ω–∞"}\n'
            f'–õ—é–±–∏–º—ã–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥: {period.decode("utf-8") if period is not None else "–Ω–µ –≤—ã–±—Ä–∞–Ω"}\n'
            f'–õ—é–±–∏–º–∞—è –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ñ–∏–ª—å–º–∞: {duration.decode("utf-8") if duration is not None else "–Ω–µ –≤—ã–±—Ä–∞–Ω–∞"}\n')

    send_text_message(text, chat_id)


def handle_favorite_genre_command(chat_id):
    url = URL + 'sendMessage'

    requests.post(url, data={
        'text': '–í—ã–±–µ—Ä–∏ –ª—é–±–∏–º—ã–π –∂–∞–Ω—Ä:',
        'chat_id': chat_id,
        'parse_mode': 'Markdown',
        'reply_markup': get_genres_keyboard()
    })


def handle_favorite_country_command(chat_id):
    url = URL + 'sendMessage'

    requests.post(url, data={
        'text': '–í—ã–±–µ—Ä–∏ –ª—é–±–∏–º—É—é —Å—Ç—Ä–∞–Ω—É –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞:',
        'chat_id': chat_id,
        'parse_mode': 'Markdown',
        'reply_markup': get_countries_keyboard()
    })


def handle_favorite_period_command(chat_id):
    url = URL + 'sendMessage'

    requests.post(url, data={
        'text': '–í—ã–±–µ—Ä–∏ –ª—é–±–∏–º—ã–π –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–µ—Ä–∏–æ–¥:',
        'chat_id': chat_id,
        'parse_mode': 'Markdown',
        'reply_markup': get_periods_keyboard()
    })


def handle_favorite_duration_command(chat_id):
    url = URL + 'sendMessage'

    requests.post(url, data={
        'text': '–í—ã–±–µ—Ä–∏ –ª—é–±–∏–º—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ñ–∏–ª—å–º–∞:',
        'chat_id': chat_id,
        'parse_mode': 'Markdown',
        'reply_markup': get_durations_keyboard()
    })


def handle_film_recommendation_command(chat_id):
    try:
        film_details = get_film_recommendation(chat_id)

        print(f'Film details: {film_details}')

        if not film_details:
            raise ValueError("No film details found")

        name = escape_markdown(film_details.get('name', '–Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'))
        description = escape_markdown(film_details.get('description', '–æ–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'))
        rating_kp = escape_markdown(str(film_details.get('rating_kp', '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö')))
        rating_imdb = escape_markdown(str(film_details.get('rating_imdb', '–Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö')))
        kp_url = escape_markdown(film_details.get('kp_url', 'URL –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'))
        trailer_url = escape_markdown(film_details.get('trailer_url', '—Ç—Ä–µ–π–ª–µ—Ä –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'))

        text = (f'–Ø –ø–æ–¥–æ–±—Ä–∞–ª –¥–ª—è —Ç–µ–±—è —Ñ–∏–ª—å–º: {name}\n'
                f'–í–æ—Ç –µ–≥–æ –æ–ø–∏—Å–∞–Ω–∏–µ: {description}\n'
                f'–†–µ–π—Ç–∏–Ω–≥ –Ω–∞ –ö–ü: {rating_kp}, —Ä–µ–π—Ç–∏–Ω–≥ –Ω–∞ IMDb: {rating_imdb}\n'
                f'–°—Å—ã–ª–∫–∞ –Ω–∞ —Ñ–∏–ª—å–º –Ω–∞ –ö–ü: {kp_url}\n'
                f'–°—Å—ã–ª–∫–∞ –Ω–∞ —Ç—Ä–µ–π–ª–µ—Ä: {trailer_url}')

    except Exception as e:
        print(f"Film recommendation error: {e}")
        send_text_message('–û—à–∏–±–∫–∞: –Ω–µ —Å–º–æ–≥ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º –¥–ª—è —Ç–µ–±—è üòû', chat_id)
        return

    url = URL + 'sendMessage'

    response = requests.post(url, data={
        'text': text,
        'chat_id': chat_id,
        'parse_mode': 'MarkdownV2',
        'reply_markup': get_film_actions_keyboard(film_details.get('kp_id'))
    })

    if response.status_code != 200:
        print(f"Error sending message: {response.status_code}, {response.text}")


def escape_markdown(text):
    return (text.replace('_', '\\_').replace('*', '\\*').replace('[', '\\[').replace(']', '\\]')
                .replace('(', '\\(').replace(')', '\\)').replace('~', '\\~').replace('`', '\\`')
                .replace('>', '\\>').replace('#', '\\#').replace('+', '\\+').replace('-', '\\-')
                .replace('=', '\\=').replace('|', '\\|').replace('{', '\\{').replace('}', '\\}')
                .replace('.', '\\.').replace('!', '\\!'))


def handle_quote_subscription_command(chat_id):
    url = URL + 'sendMessage'

    current_status = get_quote_subscription_status(chat_id)
    text = '–¢—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É, –æ—Ç–ø–∏—Å–∞—Ç—å—Å—è?' if current_status is True else '–¢—ã –µ—â—ë –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω, –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è?'

    requests.post(url, data={
        'text': text,
        'chat_id': chat_id,
        'parse_mode': 'Markdown',
        'reply_markup': get_quotes_subscription_actions_keyboard()
    })


def handle_invalid_message(message):
    chat_id = message['message']['chat']['id']
    send_text_message('–û—à–∏–±–∫–∞: —è —É–º–µ—é —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å —Ç–µ–∫—Å—Ç–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –∏ –Ω–∞–∂–∞—Ç—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏', chat_id)


def send_text_message(text, chat_id):
    url = URL + f'sendMessage?text={text}&chat_id={chat_id}'

    requests.post(url)
